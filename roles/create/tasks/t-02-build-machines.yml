---

- name: DEBUG single variable from nested dictionary / list
  debug:
    msg: "{{inventory_dir}}/roles/create/templates/xml/networks/{{project}}-{{item.0.name}}.xml"
  with_subelements:
    - "{{networks}}"
    - config
  tags: debug

# check if the networks are already defined
- name: list all existing defined virtual networks
  command: virsh net-list --all
  register: virt_net_list

- name: define networks during loop over subelements in networks
  command: virsh net-define "{{inventory_dir}}/roles/create/templates/xml/networks/{{project}}-{{item.0.name}}.xml"
  when: '"{{project}}.{{item.0.name}}" not in virt_net_list.stdout'
  with_subelements:
    - "{{networks}}"
    - config

- name: start networks during loop over subelements in networks
  command: virsh net-start "{{project}}.{{item.0.name}}"
  when: '"{{project}}.{{item.0.name}}" not in virt_net_list.stdout'
  with_subelements:
    - "{{networks}}"
    - config

- name: Configure a network to be automatically started at boot
  command: virsh net-autostart "{{project}}.{{item.0.name}}"
  when: '"{{project}}.{{item.0.name}}" not in virt_net_list.stdout'
  with_subelements:
    - "{{networks}}"
    - config

#centos uses the xfs file system and the lvm manager to organize the disk
#the resizing feature does not work so the image is without parameter
#--size after format and is prepared in 4 GB as default installation
# the hostname feature in centos corrupts all hostnamectl environment
# thats why centos (tested for 7) needs command without hostname and resizing
# debian has to have hostame defined in this moment
- name: creation qow2 images for nodes with libguestfs virt-builder centos
  command: virt-builder "{{vm_os_type}}" --root-password "password:{{os_root_password}}" --format qcow2 --run "{{inventory_dir}}/roles/create/templates/{{item}}/post-install-all.sh" --output "{{vm_image_dir}}/{{project}}.{{item}}.qcow2"
  with_items: "{{nodes}}"
  when: vm_distribution == 'centos'

- name: creation qow2 images for nodes with libguestfs virt-builder debian
  command: virt-builder "{{vm_os_type}}" --hostname "{{item}}" --root-password "password:{{ os_root_password}}" --size "{{vm_image_size}}" --format qcow2 --run "{{inventory_dir}}/roles/create/templates/{{item}}/post-install-all.sh" --output "{{vm_image_dir}}/{{project}}.{{item}}.qcow2"
  with_items: "{{nodes}}"
  when: vm_distribution == 'debian'

- name: deploy images with libvirt ->  virt-install tool
  command: virt-install -n "{{project}}.{{item.1}}" -r "{{vm_memory}}" --vcpus "2" --import --disk "path={{vm_image_dir}}/{{project}}.{{item.1}}.qcow2,format=qcow2" --graphics "vnc,port={{vm_vnc_port+item.0}},listen=0.0.0.0" --noautoconsole --network "network={{project}}.{{networks.0.name}},model={{vm_net_model}}" --network "network={{project}}.{{networks.1.name}},model={{vm_net_model}}"
  with_indexed_items: "{{nodes}}"
