---
- name: debug the hostname variable
  debug:
    var: inventory_hostname
  tags: debug

- name: change the hostname in hostname
  hostname:
    name: "{{inventory_hostname}}"

# /etc/hosts has to be updated separately
- name: replace the IP 127.0.0.1 and the hostname localhost in the hosts file
  lineinfile:
    dest: /etc/hosts
    regexp: '^127.0.0.1\s*localhost'
    line: "127.0.0.1       localhost"

- name: delete the IP 127.0.1.1 and the hostname in the hosts file
  lineinfile:
    dest: /etc/hosts
    regexp: '^127.0.1.1'
    state: absent

- name: first host_ipv4_list needed
  set_fact:
    host_ipv4_list: []
    host_long_names_list: []

- name: first host_long_names_list needed with values
  set_fact:
    host_long_names_list: "{{host_long_names_list+[item+'.'+domain]}}"
  with_items: "{{nodes}}"

- name: just check the result of host_long_names_list
  debug:
    var: host_long_names_list

- name: first host_ipv4_list needed with values
  set_fact:
    host_ipv4_list: "{{host_ipv4_list+[hostvars[item]['ansible_default_ipv4']['address']]}}"
    host_working_dir: "{{playbook_dir}}/roles/install-common/templates/hosts-{{project}}"
  with_items: "{{host_long_names_list}}"

- name: just check the result of host_ipv4_list
  debug:
    var: host_ipv4_list
  run_once: true

- name: just check the result of ansible host
  debug:
    var: ansible_host
  when: ansible_host ==  host_ipv4_list+[hostvars[host_long_names_list[0]]['ansible_default_ipv4']['address']]
  run_once: true

- name: new local working directory
  local_action: file
    path="{{host_working_dir}}"
    owner=martin
    group=martin
    mode=0744
    state=directory
  run_once: true

- name: prepare hostname
  local_action: copy
    content="{{host_long_names_list}}"
    dest="{{host_working_dir}}/hostnames.json"
    owner=martin
    group=martin
    mode=0744
  run_once: true

- name: prepare hostname_ips
  local_action: copy
    content="{{host_ipv4_list}}"
    dest="{{host_working_dir}}/hostname_ips.json"
    owner=martin
    group=martin
    mode=0744
  run_once: true

- name: prepare assemble/hosts.txt
  local_action:
    shell {{playbook_dir}}/roles/install-common/templates/hostname_ips.py -i hosts-{{project}}/ > {{host_working_dir}}/hosts.txt
  run_once: true

#assemble hosts file
- name: create new directory /etc/hosts.d/ on remote
  file:
    path: "/etc/hosts.d/"
    owner: root
    group: root
    mode: 0755
    state: directory

- name: copy hosts.txt file from  local to remote /etc/hosts.d/hostscustom to assemble
  template:
    src: "{{host_working_dir}}/hosts.txt"
    dest: "/etc/hosts.d/hosts_custom"
    owner: root
    group: root
    mode: 0755

- name: copying to hosts.d for assemble
  copy:
    src: /etc/hosts
    remote_src: yes
    dest: /etc/hosts.d/
    owner: root
    group: root
    mode: 0644

- assemble:
    src: /etc/hosts.d/
    dest: /etc/hosts
    backup: yes
    owner: root
    group: root
    mode: 0644

- name: delete local working directory
  local_action: file
    path="{{host_working_dir}}"
    state=absent
  run_once: true
